# Generated by Django 4.0.3 on 2022-03-31 22:03

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('payments', '0001_initial'),
        ('agents', '0002_remove_agent_manager_agentadmin_is_manager_and_more'),
        ('commons', '0002_periodicity'),
    ]

    operations = [
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_on', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('expired_on', models.DateTimeField()),
                ('agent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to='agents.agent')),
                ('subscription_payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='payments.payment')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(default=0.0, verbose_name='price plan')),
                ('description', models.TextField(blank=True, null=True)),
                ('periodicity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commons.periodicity')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid_on', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('parent_payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='parent_payment_record', to='payments.payment')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscriptions.subscription')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_on', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('expired_on', models.DateTimeField()),
                ('agent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_history', to='agents.agent')),
                ('subscription_payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='payments.payment')),
                ('subscription_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscriptions.subscriptionplan')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_percentage', models.FloatField(default=0.0, verbose_name='discount in percent')),
                ('discount_fixed', models.FloatField(default=0.0, verbose_name='fixed discount amount')),
                ('description', models.TextField(blank=True, null=True)),
                ('started_on', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('expired_on', models.DateTimeField()),
                ('subscription_plan', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='subscriptions.subscriptionplan')),
            ],
        ),
        migrations.AddField(
            model_name='subscription',
            name='subscription_plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscriptions.subscriptionplan'),
        ),
        migrations.AddConstraint(
            model_name='subscriptionplan',
            constraint=models.UniqueConstraint(fields=('periodicity', 'price'), name='unique_subscription_plan'),
        ),
    ]
