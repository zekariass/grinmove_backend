# Generated by Django 4.0.3 on 2022-05-10 22:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('properties', '0011_remove_apartment_property_ptr_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllPurposeProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vers_prop_description', models.TextField(blank=True, null=True)),
                ('best_category_for', models.ManyToManyField(to='properties.propertycategory', verbose_name='is is used for?')),
                ('property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='properties.property', verbose_name='parent property')),
            ],
        ),
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floors', models.IntegerField(default=0, verbose_name='apartment number of floors')),
                ('is_new', models.BooleanField(blank=True, default=False, verbose_name='is property new?')),
                ('is_multi_unit', models.BooleanField(blank=True, default=False, verbose_name='is multi unit?')),
                ('property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='properties.property', verbose_name='parent property')),
            ],
        ),
        migrations.CreateModel(
            name='CommercialProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floor', models.IntegerField(default=0, verbose_name='commercial property floor level')),
                ('is_new', models.BooleanField(default=False, verbose_name='is the commercial property new?')),
                ('building_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commercial_properties', to='properties.buildingtype', verbose_name='commercial property building type')),
                ('property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='properties.property', verbose_name='parent property')),
            ],
        ),
        migrations.CreateModel(
            name='Villa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_rooms', models.IntegerField(default=1)),
                ('number_of_bed_rooms', models.IntegerField(default=1)),
                ('floor', models.IntegerField(default=0, verbose_name='How many floor it has')),
                ('num_of_baths', models.IntegerField(default=1)),
                ('total_coumpound_area', models.FloatField(default=0.0)),
                ('housing_area', models.FloatField(default=0.0)),
                ('is_furnished', models.BooleanField(default=False, verbose_name='is the villa furnished?')),
                ('is_new', models.BooleanField(default=False, verbose_name='is the villa new?')),
                ('property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='properties.property', verbose_name='parent property')),
            ],
        ),
        migrations.CreateModel(
            name='TraditionalHouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_rooms', models.IntegerField(default=1)),
                ('number_of_bed_rooms', models.IntegerField(default=1)),
                ('floor', models.IntegerField(default=0, verbose_name='Home floor level')),
                ('num_of_baths', models.IntegerField(default=1)),
                ('area', models.FloatField(default=0.0)),
                ('is_furnished', models.BooleanField(default=False, verbose_name='is the home furnished?')),
                ('is_new', models.BooleanField(default=False, verbose_name='is the home new?')),
                ('property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='properties.property', verbose_name='parent property')),
            ],
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floor', models.IntegerField(default=0, verbose_name='office floor level')),
                ('number_of_rooms', models.IntegerField(default=1)),
                ('area', models.FloatField(default=0.0)),
                ('is_furnished', models.BooleanField(default=False, verbose_name='is the home furnished?')),
                ('is_new', models.BooleanField(default=False, verbose_name='is the office new?')),
                ('building_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='officess', to='properties.buildingtype', verbose_name='office building type')),
                ('property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='properties.property', verbose_name='parent property')),
            ],
        ),
        migrations.CreateModel(
            name='Land',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.FloatField(default=0.0, verbose_name='area of the land')),
                ('length', models.FloatField(default=0.0, verbose_name='length of the land')),
                ('width', models.FloatField(default=0.0, verbose_name='width of the land')),
                ('has_plan', models.BooleanField(default=True, verbose_name='the land has plan?')),
                ('has_debt', models.BooleanField(default=False, verbose_name='the land has unpaid debt?')),
                ('property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='properties.property', verbose_name='parent property')),
            ],
        ),
        migrations.CreateModel(
            name='Hall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floor', models.IntegerField(default=0, verbose_name='Hall floor level')),
                ('number_of_seats', models.IntegerField(default=5, verbose_name='how many seats it has?')),
                ('total_capacity', models.IntegerField(default=5, verbose_name='total capacity including standing')),
                ('hall_description', models.TextField()),
                ('property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='properties.property', verbose_name='parent property')),
            ],
        ),
        migrations.CreateModel(
            name='Condominium',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_rooms', models.IntegerField(default=1)),
                ('number_of_bed_rooms', models.IntegerField(default=1)),
                ('floor', models.IntegerField(default=0, verbose_name='condominium floor level')),
                ('num_of_baths', models.IntegerField(default=1)),
                ('area', models.FloatField(default=0.0)),
                ('is_furnished', models.BooleanField(default=False, verbose_name='is the condominium furnished?')),
                ('is_new', models.BooleanField(default=False, verbose_name='is the condominium new?')),
                ('property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='properties.property', verbose_name='parent property')),
            ],
        ),
        migrations.CreateModel(
            name='CommercialPropertyUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_rooms', models.IntegerField(default=1)),
                ('area', models.FloatField(default=0.0, verbose_name='total area of the unit')),
                ('com_prop_unit_description', models.TextField()),
                ('commercial_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='single_commercial_units', to='properties.commercialproperty', verbose_name='parent commecrial property')),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_rooms', models.IntegerField(default=1)),
                ('number_of_bed_rooms', models.IntegerField(default=1)),
                ('number_of_baths', models.IntegerField(default=1)),
                ('floor', models.IntegerField(default=0)),
                ('area', models.FloatField(default=0.0)),
                ('is_furnished', models.BooleanField(default=False, verbose_name='is apartment unit furnished?')),
                ('is_available', models.BooleanField(default=True, verbose_name='is apartment available?')),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='apartment_units', to='properties.apartment', verbose_name='parent apartment')),
            ],
        ),
        migrations.CreateModel(
            name='AllPurposePropertyUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floor', models.IntegerField(default=0, verbose_name='versatile unit floor level')),
                ('number_of_rooms', models.IntegerField(default=1)),
                ('area', models.FloatField(default=0.0)),
                ('vers_prop_unit_description', models.TextField(blank=True, null=True)),
                ('all_purpose_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units', to='properties.allpurposeproperty', verbose_name='parent all purpose property')),
            ],
        ),
    ]
